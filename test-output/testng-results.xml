<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="80950" started-at="2019-01-30T13:21:37Z" finished-at="2019-01-30T13:22:58Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="80950" started-at="2019-01-30T13:21:37Z" finished-at="2019-01-30T13:22:58Z">
      <class name="dataProviderExample.DataProviderWithExcel_001">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:dataProviderExample.DataProviderWithExcel_001@57fffcd7]" name="beforeMethod" is-config="true" duration-ms="11902" started-at="2019-01-30T13:21:39Z" finished-at="2019-01-30T13:21:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Registration_data(java.lang.String, java.lang.String)[pri:0, instance:dataProviderExample.DataProviderWithExcel_001@57fffcd7]" name="Registration_data" duration-ms="7574" started-at="2019-01-30T13:21:50Z" data-provider="Authentication" finished-at="2019-01-30T13:21:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mgr123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mgr!23]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Registration_data -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:dataProviderExample.DataProviderWithExcel_001@57fffcd7]" name="afterMethod" is-config="true" duration-ms="1223" started-at="2019-01-30T13:21:58Z" finished-at="2019-01-30T13:21:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:dataProviderExample.DataProviderWithExcel_001@57fffcd7]" name="beforeMethod" is-config="true" duration-ms="13604" started-at="2019-01-30T13:21:59Z" finished-at="2019-01-30T13:22:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Registration_data(java.lang.String, java.lang.String)[pri:0, instance:dataProviderExample.DataProviderWithExcel_001@57fffcd7]" name="Registration_data" duration-ms="6406" started-at="2019-01-30T13:22:13Z" data-provider="Authentication" finished-at="2019-01-30T13:22:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mgr123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mgr!23]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Registration_data -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:dataProviderExample.DataProviderWithExcel_001@57fffcd7]" name="afterMethod" is-config="true" duration-ms="2470" started-at="2019-01-30T13:22:19Z" finished-at="2019-01-30T13:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:dataProviderExample.DataProviderWithExcel_001@57fffcd7]" name="beforeMethod" is-config="true" duration-ms="12315" started-at="2019-01-30T13:22:22Z" finished-at="2019-01-30T13:22:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="Registration_data(java.lang.String, java.lang.String)[pri:0, instance:dataProviderExample.DataProviderWithExcel_001@57fffcd7]" name="Registration_data" duration-ms="3875" started-at="2019-01-30T13:22:34Z" data-provider="Authentication" finished-at="2019-01-30T13:22:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.UnhandledAlertException">
            <message>
              <![CDATA[Unexpected modal dialog (text: User or Password is not valid): User or Password is not valid
Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:32:46'
System info: host: 'PNGD1375', ip: '10.222.126.150', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=35.0, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 3c935400-648f-411c-b128-88fe5d14ae61
*** Element info: {Using=link text, value=Log out}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.UnhandledAlertException: Unexpected modal dialog (text: User or Password is not valid): User or Password is not valid
Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:32:46'
System info: host: 'PNGD1375', ip: '10.222.126.150', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=35.0, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 3c935400-648f-411c-b128-88fe5d14ae61
*** Element info: {Using=link text, value=Log out}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
at org.openqa.selenium.remote.ErrorHandler.createUnhandledAlertException(ErrorHandler.java:187)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:154)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByLinkText(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByLinkText.findElement(By.java:246)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at dataProviderExample.DataProviderWithExcel_001.Registration_data(DataProviderWithExcel_001.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.UnhandledAlertException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Registration_data -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:dataProviderExample.DataProviderWithExcel_001@57fffcd7]" name="afterMethod" is-config="true" duration-ms="2327" started-at="2019-01-30T13:22:38Z" finished-at="2019-01-30T13:22:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:dataProviderExample.DataProviderWithExcel_001@57fffcd7]" name="beforeMethod" is-config="true" duration-ms="11463" started-at="2019-01-30T13:22:40Z" finished-at="2019-01-30T13:22:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="Registration_data(java.lang.String, java.lang.String)[pri:0, instance:dataProviderExample.DataProviderWithExcel_001@57fffcd7]" name="Registration_data" duration-ms="3852" started-at="2019-01-30T13:22:52Z" data-provider="Authentication" finished-at="2019-01-30T13:22:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testuser1]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.UnhandledAlertException">
            <message>
              <![CDATA[Unexpected modal dialog (text: User or Password is not valid): User or Password is not valid
Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:32:46'
System info: host: 'PNGD1375', ip: '10.222.126.150', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=35.0, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: a3476958-cc20-4374-b4be-5d2d9820dcdf
*** Element info: {Using=link text, value=Log out}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.UnhandledAlertException: Unexpected modal dialog (text: User or Password is not valid): User or Password is not valid
Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:32:46'
System info: host: 'PNGD1375', ip: '10.222.126.150', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=35.0, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: a3476958-cc20-4374-b4be-5d2d9820dcdf
*** Element info: {Using=link text, value=Log out}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
at org.openqa.selenium.remote.ErrorHandler.createUnhandledAlertException(ErrorHandler.java:187)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:154)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByLinkText(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByLinkText.findElement(By.java:246)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at dataProviderExample.DataProviderWithExcel_001.Registration_data(DataProviderWithExcel_001.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.UnhandledAlertException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Registration_data -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:dataProviderExample.DataProviderWithExcel_001@57fffcd7]" name="afterMethod" is-config="true" duration-ms="2468" started-at="2019-01-30T13:22:56Z" finished-at="2019-01-30T13:22:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- dataProviderExample.DataProviderWithExcel_001 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
